<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.nlog-project.org/schemas/NLog.xsd NLog.xsd"
      autoReload="true"
      throwExceptions="false"
      internalLogLevel="Off" internalLogFile="c:\temp\nlog-internal.log">

  <!-- optional, add some variables
  https://github.com/nlog/NLog/wiki/Configuration-file#variables
  -->
  <variable name="aspnet-application" value="Your Site Name"/>

  <!--
  See https://github.com/nlog/nlog/wiki/Configuration-file
  for information on customizing logging rules and outputs.
   -->
  <extensions>
    <add assembly="NLog.Mongo"/>
    
    <!-- For Custom LayoutRenderer -->
    <!--<add assembly="YourAssembly"/>-->
  </extensions>

  <targets>

    <!--
    add your targets here
    See https://github.com/nlog/NLog/wiki/Targets for possible targets.
    See https://github.com/nlog/NLog/wiki/Layout-Renderers for the possible layout renderers.
    -->

    <!--Write events and send mail-->
    <!-- INSTALL NLog.Web from NUGET for some LayoutRenderers -->
    
    <!--<target xsi:type="Mail" name="m"
            smtpServer="smtp.gmail.com" smtpPort="587" 
            smtpUserName="MyMailAddress@mail.com" smtpPassword="xxxxxx"
            smtpAuthentication="Basic"
            
            subject="${aspnet-application} : ${level}"
            layout="${longdate} ${uppercase:${level}} ${message}${newline}${newline}"
            body="
                &lt;b&gt;Datetime : &lt;/b&gt;${date}${newline} 
                &lt;b&gt;Version : &lt;/b&gt;${assembly-version}${newline} 
                &lt;b&gt;Username : &lt;/b&gt;${username}${newline}${newline} 
            
                &lt;b&gt;Controller : &lt;/b&gt;${aspnet-mvc-controller}${newline} 
                &lt;b&gt;Action : &lt;/b&gt;${aspnet-mvc-action}${newline} 
                &lt;b&gt;Req. Url : &lt;/b&gt;${aspnet-request-url}${newline} 
                &lt;b&gt;Req. Querystring : &lt;/b&gt;${aspnet-request-querystring}${newline}${newline} 
            
                ${message}${newline}${newline}"
            header="${logger} ${level}"
            footer="This message for information."
            
            useSystemNetMailSettings="false"
            replaceNewlineWithBrTagInHtml="true"
            enableSsl="false" addNewLines="true" html="true"
            
            from="MyMailAddress@mail.com" to="MyMailAddress2@mail.com" 
            cc="MyMailAddress3@mail.com" bcc="MyMailAddress4@mail.com"  />-->
    

    <!--Write events to a file with the date in the filename.-->
    <!--<target xsi:type="File" name="f" fileName="${basedir}/logs/${shortdate}.log"
          layout="${longdate} ${uppercase:${level}} ${message}" />-->

    
    <!--Write events to a mongoDb-->
    <!--<target xsi:type="Mongo" name="mg" connectionString="mongodb://localhost" collectionName="Errors" cappedCollectionSize="26214400" databaseName="Logging">
      <field name="Date" layout="${date}" bsonType="DateTime" />
      <field name="Level" layout="${level}"/>
      <field name="Message" layout="${message}" />
      <field name="Logger" layout="${logger}"/>
      <field name="Exception" layout="${exception:format=tostring}" />
      <field name="ThreadID" layout="${threadid}" bsonType="Int32" />
      <field name="ThreadName" layout="${threadname}" />
      <field name="ProcessID" layout="${processid}" bsonType="Int32" />
      <field name="ProcessName" layout="${processname:fullName=true}" />
      <field name="UserName" layout="${windows-identity}" />
    </target>-->

    
    <!--Write events to a db-->
    <!--<target name="db" xsi:type="Database">
      <connectionStringName>LoggingDBConnectionString</connectionStringName>
      <commandText>
        INSERT INTO dbo.Log (
          Application, Logged, Level, Message,
          Username,
          ServerName, Port, Url, Https,
          ServerAddress, RemoteAddress,
          Logger, CallSite, Exception )
        VALUES (
          @Application, @Logged, @Level, @Message,
          @Username,
          @ServerName, @Port, @Url, @Https,
          @ServerAddress, @RemoteAddress,
          @Logger, @Callsite, @Exception );
      </commandText>
      <parameter name="@application" layout="${appsetting:name=AppName:default=Unknown\: set AppName in appSettings}" />
      <parameter name="@logged" layout="${date}" />
      <parameter name="@level" layout="${level}" />
      <parameter name="@message" layout="${message}" />

      <parameter name="@username" layout="${identity}" />

      <parameter name="@serverName" layout="${aspnet-request:serverVariable=SERVER_NAME}" />
      <parameter name="@port" layout="${aspnet-request:serverVariable=SERVER_PORT}" />
      <parameter name="@url" layout="${aspnet-request:serverVariable=HTTP_URL}" />
      <parameter name="@https" layout="${when:inner=1:when='${aspnet-request:serverVariable=HTTPS}' == 'on'}${when:inner=0:when='${aspnet-request:serverVariable=HTTPS}' != 'on'}" />

      <parameter name="@serverAddress" layout="${aspnet-request:serverVariable=LOCAL_ADDR}" />
      <parameter name="@remoteAddress" layout="${aspnet-request:serverVariable=REMOTE_ADDR}:${aspnet-request:serverVariable=REMOTE_PORT}" />

      <parameter name="@logger" layout="${logger}" />
      <parameter name="@callSite" layout="${callsite}" />
      <parameter name="@exception" layout="${exception:tostring}" />
    </target>-->
    
  
  </targets>

  <rules>
    <!-- add your logging rules here -->

    <!--
    Write all events with minimal level of Debug (So Debug, Info, Warn, Error and Fatal, but not Trace)  to "f"
    <logger name="*" minlevel="Debug" writeTo="f" />
    -->

    <!--<logger name="*" minlevel="Error" writeTo="m" />-->
    <!--<logger name="*" minlevel="Error" writeTo="f" />-->
    <!--<logger name="*" minlevel="Error" writeTo="mg" />-->
    <!--<logger name="*" minlevel="Error" writeTo="db" />-->
  </rules>
</nlog>
